// To get started, press Ctrl+Space to bring up the completion menu and view the available nodes.

// You can also use the buttons in the sidebar to perform actions on nodes.
// Actions currently available include:

// * Enabling / disabling the node
// * Adding the bus to a bus
// * Removing the node
// * Connecting ADC channels

// For more help, browse the DeviceTree documentation at https://docs.zephyrproject.org/latest/guides/dts/index.html
// You can also visit the nRF DeviceTree extension documentation at https://nrfconnect.github.io/vscode-nrf-connect/devicetree/nrfdevicetree.html

// To get started, press Ctrl+Space to bring up the completion menu and view the available nodes.

// You can also use the buttons in the sidebar to perform actions on nodes.
// Actions currently available include:

// * Enabling / disabling the node
// * Adding the bus to a bus
// * Removing the node
// * Connecting ADC channels

// For more help, browse the DeviceTree documentation at https://docs.zephyrproject.org/latest/guides/dts/index.html
// You can also visit the nRF DeviceTree extension documentation at https://nrfconnect.github.io/vscode-nrf-connect/devicetree/nrfdevicetree.html

/ {
	chosen {
		zephyr,display = &st7789v;
	};

    buttons {
        compatible = "gpio-keys";
        button0: button_0 {
            gpios = <&gpio1 2 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
            label = "Push button switch 0";
        };
        button1: button_1 {
            gpios = <&gpio1 9 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
            label = "Push button switch 1";
        };
        button2: button_2 {
            gpios = <&gpio0 8 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
            label = "Push button switch 2";
        };        
    };

    aliases {
		sw0 = &button0;
		sw1 = &button1;
		sw2 = &button2;
	};

};

&spi1 {
	status = "okay";
	cs-gpios = <&gpio1 8 GPIO_ACTIVE_LOW>; /* D5 TFT*/

    st7789v: st7789v@0 {
		compatible = "sitronix,st7789v";
		label = "ST7789V";
		spi-max-frequency = <20000000>;
		reg = <0>;
		cmd-data-gpios = <&gpio0 26 GPIO_ACTIVE_LOW>;	/* D9 */
		reset-gpios = <&gpio0 27 GPIO_ACTIVE_LOW>;	/* D10 */
		width = <320>;
		height = <170>;
		x-offset = <0>;
		y-offset = <35>;
		vcom = <0x2b>;
		gctrl = <0x35>;
		vrhs = <0x0f>;
		vdvs = <0x20>;
		mdac = <0x60>;
		gamma = <0x01>;
		colmod = <0x55>;
		lcm = <0x2c>;
		porch-param = [0c 0c 00 33 33];
		cmd2en-param = [5a 69 02 01];
		pwctrl1-param = [52 a1];
		pvgam-param = [D0 00 02 07 0B 1A 31 54 40 29 12 12 12 17];
		nvgam-param = [D0 00 02 07 05 15 2D 44 44 1C 18 16 1C 1D];
		ram-param = [00 F8];
		rgb-param = [CD 08 14];
	};
};

&uart1 {
    compatible = "nordic,nrf-uarte";
    reg = <0x40028000 0x1000>;
    interrupts = <40 NRF_DEFAULT_IRQ_PRIORITY>;
    status = "okay";
    current-speed = <115200>;
    
    pinctrl-0 = <&uart1_default>;
	pinctrl-1 = <&uart1_sleep>;
	pinctrl-names = "default", "sleep";     

    my_device: my_uart_peripheral0 {
        compatible = "riphiphip,my_uart_peripheral";
        status="okay";
        label = "my_uart_peripheral0";
        button-gpios = <&gpio1 2 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>; // Button 1 on dk
        initial-string = "Hello, World!";
    };
};

&pinctrl {
    uart1_default: uart1_default {
		group1 {
			psels = <NRF_PSEL(UART_TX, 0, 8)>,
				<NRF_PSEL(UART_RX, 0, 6)>;
		};
	};

	uart1_sleep: uart1_sleep {
		group1 {
			psels = <NRF_PSEL(UART_TX, 0, 8)>,
				<NRF_PSEL(UART_RX, 0, 6)>;
			low-power-enable;
		};
	};
};